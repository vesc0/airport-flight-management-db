CREATE TABLE "AIRPORT"
(
  "AIRPORT_ID" NUMBER(10,0) NOT NULL ENABLE,
  "NAME" VARCHAR2(100) NOT NULL ENABLE,
  "CODE" VARCHAR2(5) NOT NULL ENABLE,
  "COUNTRY" VARCHAR2(30) NOT NULL ENABLE,
  CONSTRAINT "AIRPORT_PK" PRIMARY KEY ("AIRPORT_ID") USING INDEX ENABLE,
  CONSTRAINT "AIRPORT_CODE_UK" UNIQUE ("CODE") USING INDEX ENABLE
);

CREATE TABLE "TERMINAL"
(
  "TERMINAL_ID" NUMBER(10,0) NOT NULL ENABLE,
  "NAME" VARCHAR2(20) NOT NULL ENABLE,
  "AIRPORT_ID" NUMBER(10,0) NOT NULL ENABLE,
  CONSTRAINT "TERMINAL_PK" PRIMARY KEY ("TERMINAL_ID") USING INDEX ENABLE,
  CONSTRAINT "TERMINAL_AIRPORT_FK" FOREIGN KEY ("AIRPORT_ID")
    REFERENCES "AIRPORT" ("AIRPORT_ID") ON DELETE CASCADE ENABLE
);

CREATE TABLE "GATE"
(
  "GATE_ID" NUMBER(10,0) NOT NULL ENABLE,
  "GATE_NUMBER" VARCHAR2(10) NOT NULL ENABLE,
  "TERMINAL_ID"  NUMBER(10,0) NOT NULL ENABLE,
  CONSTRAINT "GATE_PK" PRIMARY KEY ("GATE_ID") USING INDEX ENABLE,
  CONSTRAINT "GATE_NUMBER_TERMINAL_UK" UNIQUE ("GATE_NUMBER", "TERMINAL_ID") USING INDEX ENABLE,
  CONSTRAINT "GATE_TERMINAL_FK" FOREIGN KEY ("TERMINAL_ID")
    REFERENCES "TERMINAL" ("TERMINAL_ID") ON DELETE CASCADE ENABLE
);

CREATE TABLE "AIRCRAFT"
(
  "AIRCRAFT_ID" NUMBER(10,0) NOT NULL ENABLE,
  "MODEL" VARCHAR2(50) NOT NULL ENABLE,
  "CAPACITY" NUMBER(5,0) NOT NULL ENABLE,
  "REGISTRATION_NO" VARCHAR2(20) NOT NULL ENABLE,
  "MANUFACTURER" VARCHAR2(50),
  "YEAR_BUILT" NUMBER(4,0),
  CONSTRAINT "AIRCRAFT_PK" PRIMARY KEY ("AIRCRAFT_ID") USING INDEX ENABLE,
  CONSTRAINT "AIRCRAFT_REG_UK" UNIQUE ("REGISTRATION_NO") USING INDEX ENABLE
);

CREATE TABLE "PILOT"
(
  "PILOT_ID" NUMBER(10,0) NOT NULL ENABLE,
  "RANK" VARCHAR2(30),
  CONSTRAINT "PILOT_PK" PRIMARY KEY ("PILOT_ID") USING INDEX ENABLE
);

CREATE TABLE "ATTENDANT"
(
  "ATTENDANT_ID" NUMBER(10,0) NOT NULL ENABLE,
  CONSTRAINT "ATTENDANT_PK" PRIMARY KEY ("ATTENDANT_ID") USING INDEX ENABLE
);

CREATE TABLE "CREW"
(
  "CREW_ID" NUMBER(10,0) NOT NULL ENABLE,
  "FULL_NAME" VARCHAR2(100) NOT NULL ENABLE,
  "LICENSE_NO" VARCHAR2(30) NOT NULL ENABLE,
  "PILOT_ID" NUMBER(10,0) NULL,
  "ATTENDANT_ID" NUMBER(10,0) NULL,
  "MANAGER_ID" NUMBER(10,0) NULL,
  CONSTRAINT "CREW_PK" PRIMARY KEY ("CREW_ID") USING INDEX ENABLE,
  CONSTRAINT "CREW_ARC" CHECK (
    (PILOT_ID IS NOT NULL AND ATTENDANT_ID IS NULL) OR
    (PILOT_ID IS NULL AND ATTENDANT_ID IS NOT NULL)
  ) ENABLE,
  CONSTRAINT "CREW_PILOT_FK" FOREIGN KEY (PILOT_ID) REFERENCES PILOT (PILOT_ID) ON DELETE SET NULL ENABLE,
  CONSTRAINT "CREW_ATTENDANT_FK" FOREIGN KEY (ATTENDANT_ID) REFERENCES ATTENDANT (ATTENDANT_ID) ON DELETE SET NULL ENABLE,
  CONSTRAINT "CREW_MANAGER_FK" FOREIGN KEY (MANAGER_ID) REFERENCES CREW (CREW_ID) ON DELETE SET NULL ENABLE
);

CREATE TABLE "PASSENGER"
(
  "PASSENGER_ID" NUMBER(10,0) NOT NULL ENABLE,
  "FULL_NAME" VARCHAR2(100) NOT NULL ENABLE,
  "PASSPORT_NO" VARCHAR2(20) NOT NULL ENABLE,
  "EMAIL" VARCHAR2(100) NOT NULL ENABLE,
  "PHONE" VARCHAR2(20) NOT NULL ENABLE,
  CONSTRAINT "PASSENGER_PK" PRIMARY KEY ("PASSENGER_ID") USING INDEX ENABLE,
  CONSTRAINT "PASSENGER_PASSPORT_UK" UNIQUE ("PASSPORT_NO") USING INDEX ENABLE,
  CONSTRAINT "PASSENGER_EMAIL_UK" UNIQUE ("EMAIL") USING INDEX ENABLE,
  CONSTRAINT "PASSENGER_PHONE_UK" UNIQUE ("PHONE") USING INDEX ENABLE
);

CREATE TABLE "FLIGHT"
(
  "FLIGHT_ID" NUMBER(10,0) NOT NULL ENABLE,
  "FLIGHT_NO" VARCHAR2(10) NOT NULL ENABLE,
  "DEPARTURE_TIME" DATE NOT NULL ENABLE,
  "ARRIVAL_TIME" DATE NOT NULL ENABLE,
  "FROM_AIRPORT_ID" NUMBER(10,0) NOT NULL ENABLE,
  "TO_AIRPORT_ID" NUMBER(10,0) NOT NULL ENABLE,
  "AIRCRAFT_ID" NUMBER(10,0) NOT NULL ENABLE,
  "GATE_ID" NUMBER(10,0) NOT NULL ENABLE,
  "STATUS" VARCHAR2(10) NOT NULL ENABLE,
  "FLIGHT_TYPE" VARCHAR2(20) NOT NULL ENABLE,
  "AIRLINE" VARCHAR2(100),
  "OWNER_NAME" VARCHAR2(100),
  "CARGO_COMPANY" VARCHAR2(100),
  "CARGO_WEIGHT" NUMBER(6,2),
  CONSTRAINT "FLIGHT_PK" PRIMARY KEY ("FLIGHT_ID") USING INDEX ENABLE,
  CONSTRAINT "FLIGHT_NO_UK" UNIQUE ("FLIGHT_NO") USING INDEX ENABLE,
  CONSTRAINT "CHK_AIRPORT_DIFF" CHECK ("FROM_AIRPORT_ID" <> "TO_AIRPORT_ID") ENABLE,
  CONSTRAINT "CHK_TIME" CHECK ("ARRIVAL_TIME" > "DEPARTURE_TIME") ENABLE,
  CONSTRAINT "CHK_STATUS" CHECK ("STATUS" IN ('departed', 'boarding', 'canceled', 'delayed', 'landed')) ENABLE,
  CONSTRAINT "CHK_FLIGHT_TYPE" CHECK ("FLIGHT_TYPE" IN ('CommercialFlight', 'PrivateFlight', 'CargoFlight')) ENABLE,
  CONSTRAINT "CHK_FLIGHT_SUBTYPE"
    CHECK (
      ("FLIGHT_TYPE" = 'CommercialFlight' AND "AIRLINE" IS NOT NULL AND "OWNER_NAME" IS NULL AND "CARGO_COMPANY" IS NULL AND "CARGO_WEIGHT" IS NULL)
      OR
      ("FLIGHT_TYPE" = 'PrivateFlight' AND "OWNER_NAME" IS NOT NULL AND "AIRLINE" IS NULL AND "CARGO_COMPANY" IS NULL AND "CARGO_WEIGHT" IS NULL)
      OR
      ("FLIGHT_TYPE" = 'CargoFlight' AND "CARGO_COMPANY" IS NOT NULL AND "AIRLINE" IS NULL AND "OWNER_NAME" IS NULL)
    )
    ENABLE,
  CONSTRAINT "FLIGHT_AIRCRAFT_FK" FOREIGN KEY ("AIRCRAFT_ID") REFERENCES "AIRCRAFT" ("AIRCRAFT_ID") ENABLE,
  CONSTRAINT "FLIGHT_FROM_AIRPORT_FK" FOREIGN KEY ("FROM_AIRPORT_ID") REFERENCES "AIRPORT" ("AIRPORT_ID") ENABLE,
  CONSTRAINT "FLIGHT_TO_AIRPORT_FK" FOREIGN KEY ("TO_AIRPORT_ID") REFERENCES "AIRPORT" ("AIRPORT_ID") ENABLE,
  CONSTRAINT "FLIGHT_GATE_FK" FOREIGN KEY ("GATE_ID") REFERENCES "GATE" ("GATE_ID") ENABLE
);

CREATE TABLE "FLIGHT_CREW"
(
  "FLIGHT_ID" NUMBER(10,0) NOT NULL ENABLE,
  "CREW_ID" NUMBER(10,0) NOT NULL ENABLE,
  CONSTRAINT "FLIGHT_CREW_PK" PRIMARY KEY ("FLIGHT_ID","CREW_ID") USING INDEX ENABLE,
  CONSTRAINT "FLIGHT_CREW_FLIGHT_FK" FOREIGN KEY ("FLIGHT_ID")
    REFERENCES "FLIGHT" ("FLIGHT_ID") ON DELETE CASCADE ENABLE,
  CONSTRAINT "FLIGHT_CREW_CREW_FK" FOREIGN KEY ("CREW_ID")
    REFERENCES "CREW" ("CREW_ID") ON DELETE CASCADE ENABLE
);

CREATE TABLE FLIGHT_LOG
(
  FLIGHT_ID NUMBER(10,0) NOT NULL ENABLE,
  ACTUAL_DEPARTURE_TIME DATE NOT NULL ENABLE,
  ACTUAL_ARRIVAL_TIME DATE NOT NULL ENABLE,
  CONSTRAINT FLIGHT_LOG_PK PRIMARY KEY (FLIGHT_ID) USING INDEX ENABLE,
  CONSTRAINT FLIGHT_LOG_FK FOREIGN KEY (FLIGHT_ID) REFERENCES FLIGHT (FLIGHT_ID) ON DELETE CASCADE
);

CREATE TABLE "BOARDING_PASS"
(
  "BOARDING_PASS_ID" NUMBER(10,0) NOT NULL ENABLE,
  "PASSENGER_ID" NUMBER(10,0) NOT NULL ENABLE,
  "FLIGHT_ID" NUMBER(10,0) NOT NULL ENABLE,
  "SEAT" VARCHAR2(5)  NOT NULL ENABLE,
  "CLASS" VARCHAR2(20) NOT NULL ENABLE,
  "STATUS" VARCHAR2(20) NOT NULL ENABLE,
  CONSTRAINT "BOARDING_PASS_PK" PRIMARY KEY ("BOARDING_PASS_ID") USING INDEX ENABLE,
  CONSTRAINT "CHK_BOARDING_PASS_STATUS"
    CHECK ("STATUS" IN ('checked-in', 'cancelled', 'boarded')) ENABLE,
  CONSTRAINT "BOARDING_PASS_PASSENGER_FK"
    FOREIGN KEY ("PASSENGER_ID")
    REFERENCES "PASSENGER" ("PASSENGER_ID") ON DELETE CASCADE ENABLE,
  CONSTRAINT "BOARDING_PASS_FLIGHT_FK"
    FOREIGN KEY ("FLIGHT_ID")
    REFERENCES "FLIGHT" ("FLIGHT_ID") ON DELETE CASCADE ENABLE,
  CONSTRAINT "BOARDING_PASS_UNIQUE"
    UNIQUE ("PASSENGER_ID", "FLIGHT_ID") USING INDEX ENABLE
);

CREATE TABLE "BAGGAGE"
(
  "BAGGAGE_ID" NUMBER(10,0) NOT NULL ENABLE,
  "BOARDING_PASS_ID" NUMBER(10,0) NOT NULL ENABLE,
  "TAG_NUMBER" VARCHAR2(30) NOT NULL ENABLE,
  "WEIGHT" NUMBER(5,2) NOT NULL ENABLE,
  "STATUS" VARCHAR2(20) NOT NULL ENABLE,
  "TYPE" VARCHAR2(20),
  "DESCRIPTION" VARCHAR2(100),
  CONSTRAINT "BAGGAGE_PK" PRIMARY KEY ("BAGGAGE_ID") USING INDEX ENABLE,
  CONSTRAINT "CHK_BAGGAGE_STATUS" CHECK ("STATUS" IN ('checked-in','loaded','unloaded','missing','delayed','claimed')) ENABLE,
  CONSTRAINT "CHK_BAGGAGE_TYPE" CHECK ("TYPE" IN ('checked-in','carry-on','oversized')) ENABLE,
  CONSTRAINT "BAGGAGE_BOARDING_PASS_FK" FOREIGN KEY ("BOARDING_PASS_ID")
    REFERENCES "BOARDING_PASS" ("BOARDING_PASS_ID") ON DELETE CASCADE ENABLE
);

CREATE OR REPLACE TRIGGER trg_check_boarding_pass_flight_type
BEFORE INSERT OR UPDATE ON BOARDING_PASS
FOR EACH ROW
DECLARE
  v_flight_type FLIGHT.FLIGHT_TYPE%TYPE;
BEGIN
  SELECT FLIGHT_TYPE INTO v_flight_type
  FROM FLIGHT
  WHERE FLIGHT_ID = :NEW.FLIGHT_ID;

  IF v_flight_type = 'CargoFlight' THEN
    RAISE_APPLICATION_ERROR(-20001, 'Boarding pass cannot be issued for cargo flights.');
  END IF;
END;
/